import 'react-native-gesture-handler';
import { ScreenContainer } from "react-native-screens";
import React ,{useState, useEffect} from 'react';
import {SafeAreaView, StyleSheet, Text, View,Button,TextInput,TouchableOpacity,ImageBackground,Dimensions } from 'react-native';
import CountDown from 'react-native-countdown-component';

const image = { uri: "https://i.pinimg.com/originals/83/04/a9/8304a9c7cce7981bf599b8c1d78bda7f.jpg" };
difficultyLevel = 0;//sitas bus reikalingas skaiciuojant

  export const Register = ({ navigation} ) => {

    const [name, setName] = useState('');

    const nameInputHandler = (enteredText) => {
      setName(enteredText);
    };
    
    return (
      <View >
      <ScreenContainer>
      <ImageBackground source={image} style={styles.image}></ImageBackground>
      <Text style= {styles.header}>Prisijunkite</Text>
      <TextInput
      placeholder="Vardas" 
      style={styles.input} 
      underlineColorAndroid={'transparent'} 
      onChangeText={nameInputHandler}
      />
      <View style={styles.button1}>
        {/* Nusiunčia vardą į homepage ir nueina į jį */}
        <Button title="Register" onPress= {() => { navigation.navigate("HomePage", {name}) } } color= "#c717fc"/>
        </View>
        
      </ScreenContainer>
      </View>
    );
  }

  // jei i kitus page'us noresit paduot varda, tai route irasykit prie navigation ir tada naudokit kaip  route.params.name
  export const HomePage = ({ navigation, route}) => {
    return (
      <ScreenContainer>
      <ImageBackground source={image} style={styles.image}></ImageBackground>
      <Text style= {styles.header1}> {route.params.name}</Text>
      <View style={styles.button}>
      <Button title= "Play" onPress= {() => navigation.push("OptionsPage1")} color= "#c717fc"/>
      <View style={styles.button1}>
      <Button title= "Settings"/></View>
      <Button title= "Credits"/>
      </View>
      </ScreenContainer>
    );
  }

  export const OptionsPage1 = ({ navigation}) => {
          return (
            <ScreenContainer>
            <ImageBackground source={image} style={styles.image}></ImageBackground>
            <View style={styles.button}>
            <Button title= "Topics" onPress= {() => navigation.push("OptionsPage2Topics")} color= "#c717fc"/>
            <View style={styles.button1}>
            <Button title= "General" onPress= {() => navigation.push("OptionsPage2General")} color= "#c717fc"/></View>
            <Button title="Go back" onPress={() => navigation.goBack()} />
            </View>
            </ScreenContainer>
          );
     }

   export const OptionsPage2General = () => {
        return (
          <ScreenContainer>
          <ImageBackground source={image} style={styles.image}></ImageBackground>
          <View style={styles.button}>
          <Button title= "Easy" onPress= {() => navigation.push("GeneralEasy")} color= "#c717fc"/>
          <Button title= "Medium" onPress= {() => difficultyLevel = 2} />
          <Button title= "Hard" onPress= {() => difficultyLevel = 3}/>
          <Button title="Go back" onPress={() => navigation.goBack()} />
          </View>
          </ScreenContainer>
        );
   }
   export const OptionsPage2Topics = () => {
           return (
             <ScreenContainer>
             <ImageBackground source={image} style={styles.image}></ImageBackground>
             <View style={styles.button}>
             <Button title= "Math"/>
             <Button title= "History"/>
             <Button title= "Biology"/>
             <Button title= "Languages"/>
             <Button title="Go back" onPress={() => navigation.goBack()} />
             </View>
             </ScreenContainer>
           );
   }

   export const GeneralEasy = () => {
      const [totalDuration, setTotalDuration] = useState(0);

        return (
          <ScreenContainer>
          <ImageBackground source={image} style={styles.image}></ImageBackground>
            <View >
              <Text >
                Question
              </Text>

              <CountDown
                until={60}
                //duration of countdown in seconds
                timeToShow={['M', 'S']}
                //formate to show
                //onFinish={() => alert('finished')}
                //on Finish call
                onPress={() => alert('hello')}
                //on Press call
                size={10}

              />
              <View>
              <TextInput placeholder="Answer" style={styles.input} underlineColorAndroid={'transparent'} />
              <Button title="Submit"  color= "#c717fc"/>
              </View>
            </View>
         </ScreenContainer>
        );
   }


   export const SettingsPage = () => {
           return (
             <ScreenContainer>
             <ImageBackground source={image} style={styles.image}></ImageBackground>

             </ScreenContainer>
           );
      }

  const styles = StyleSheet.create({
    header:{
      fontSize:30,
      alignSelf:'center',
      top: 0,
      margin:100,
      color:'#fff'
    },
     header1:{
      fontSize:20,
      alignSelf:'center',
      right:120,
      margin:10,
      color:'#c717fc',
      backgroundColor:"#fff"
    },
    image: {
      flex: 1,
      resizeMode: "cover",
      justifyContent: "center",
      width: Dimensions.get('window').width,
      height: Dimensions.get('window').height,
      position:"absolute",
      zIndex: -1,

    },
    button: {
      width:150,
      alignSelf:"center",
      margin:200,
      

    },
    button1: {
      width:150,
      alignSelf:"center",
      margin:50,
    },
    input: {
      width:300,
      height:40,
      borderColor:'#000',
      borderWidth:1,
      padding:1,
      backgroundColor:'#fff',
      alignSelf:'center',
      textAlign:'center',
      marginBottom:10,
    },
  });


